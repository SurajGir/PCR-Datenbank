# Generated by Django 5.1.7 on 2025-03-10 15:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cycler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Extractor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SampleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StoragePlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PCRKit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('mikrogen', 'Mikrogen'), ('external', 'External')], max_length=20)),
            ],
            options={
                'unique_together': {('name', 'type')},
            },
        ),
        migrations.CreateModel(
            name='PCRSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mikrogen_internal_number', models.CharField(max_length=50, unique=True)),
                ('provider_number', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_draw', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('country_of_origin', models.CharField(blank=True, max_length=100, null=True)),
                ('extraction_date', models.DateField(blank=True, null=True)),
                ('mikrogen_ct_value', models.FloatField(blank=True, null=True)),
                ('external_ct_value', models.FloatField(blank=True, null=True)),
                ('sample_volume', models.FloatField(help_text='Sample volume in ml')),
                ('sample_volume_remaining', models.FloatField(help_text='Remaining sample volume in ml')),
                ('in_use', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_samples', to=settings.AUTH_USER_MODEL)),
                ('current_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='samples_in_use', to=settings.AUTH_USER_MODEL)),
                ('cycler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.cycler')),
                ('external_pcr_kit', models.ForeignKey(blank=True, limit_choices_to={'type': 'external'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='external_samples', to='core.pcrkit')),
                ('extractor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.extractor')),
                ('mikrogen_pcr_kit', models.ForeignKey(blank=True, limit_choices_to={'type': 'mikrogen'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='mikrogen_samples', to='core.pcrkit')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.provider')),
                ('sample_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.sampletype')),
                ('storage_place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.storageplace')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.target')),
            ],
        ),
        migrations.CreateModel(
            name='UsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume_used', models.FloatField(default=0)),
                ('checkout_date', models.DateTimeField(auto_now_add=True)),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='core.pcrsample')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
